apiVersion: apps/v1
kind: Deployment
metadata:
  name: minitalk-frontend
spec:
  template:
    metadata:
      labels:
        app: minitalk-frontend
        app.kubernetes.io/name: minitalk
        app.kubernetes.io/version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: ghcr.io/jeeonpark/observability-minitalk/minitalk-frontend:main-82a4017
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_BACKEND_URL
          value: "/api"
        - name: REACT_APP_WEBSOCKET_URL
          value: "/socket.io"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: minitalk-frontend
  labels:
    app: minitalk-frontend
    app.kubernetes.io/name: minitalk
    app.kubernetes.io/version: v1.0.0
spec:
  selector:
    app: minitalk-frontend
    app.kubernetes.io/name: minitalk
    app.kubernetes.io/version: v1.0.0
  ports:
  - name: web
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minitalk-ingress
  labels:
    app.kubernetes.io/name: minitalk
    app.kubernetes.io/version: v1.0.0
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: minitalk-jonny.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minitalk-frontend
            port:
              number: 80 
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: minitalk-backend
            port:
              number: 4000
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: minitalk-backend
            port:
              number: 4000 
 